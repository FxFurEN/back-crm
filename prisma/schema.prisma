generator client {
  provider = "prisma-client-js"
  output   = "./__generated__"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URI")
}

model User {
  id String @id @default(uuid())

  email    String @unique
  password String

  displayName String

  role UserRole @default(REGULAR)

  isVerified Boolean @default(false) @map("is_verified")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  Order     Order[]

  @@map("users")
}

model Token {
  id String @id @default(uuid())

  email     String
  token     String    @unique
  type      TokenType
  expiresIn DateTime  @map("expires_in")

  createdAt DateTime @default(now()) @map("created_at")

  @@map("tokens")
}

model Warehouse {
  id       String  @id @default(uuid())
  name     String
  location String?
  items    Item[]  @relation("WarehouseItems")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("warehouses")
}

model Order {
  id           String      @id @default(uuid())
  customer     String
  device       String
  issue        String
  technician   User        @relation(fields: [technicianId], references: [id])
  technicianId String
  status       OrderStatus @default(COMPLETED)

  createdAt   DateTime  @default(now()) @map("created_at")
  completedAt DateTime? @map("completed_at")

  @@map("completed_orders")
}

model Item {
  id          String    @id @default(uuid())
  name        String
  quantity    Int       @default(0)
  price       Decimal?  @db.Decimal(10, 2)
  warehouse   Warehouse @relation("WarehouseItems", fields: [warehouseId], references: [id])
  warehouseId String

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("items")
}

enum OrderStatus {
  PENDING
  IN_PROGRESS
  COMPLETED
  CANCELLED
}

enum UserRole {
  REGULAR
  ADMIN
}

enum TokenType {
  VERIFICATION
  TWO_FACTOR
  PASSWORD_RESET
  INVITE
}
